const axios = require('axios');

module.exports = (bot) => {
    bot.onText(/\/Ù…Ø³Ù„Ø³Ù„ (.+)/, async (msg, match) => {
        const chatId = msg.chat.id;
        const searchQuery = match[1];
        const API_KEY = '890d685742fa1316f2288b6c4c8243d5';

        const url = `https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&language=ar&query=${searchQuery}`;

        try {
            const res = await axios.get(url);

            if (res.data.total_results > 0) {
                const series = res.data.results[0];
                const title = series.name;
                const title1 = series.original_name;
                const released = series.first_air_date;
                const year = released.substring(0, 4);
                const countries = series.origin_country;
                const language = series.original_language;
                const overview = series.overview;
                const rating = series.vote_average;
                const poster = series.poster_path;

                const imageUrl = `https://image.tmdb.org/t/p/w500/${poster}`;
                const caption = `ðŸŽ¥ Ø§Ù„Ø¹Ù†ÙˆØ§Ù†: ${title} Ø§Ù„Ø¹Ù†ÙˆØ§Ù† Ø¨Ø§Ù„Ù„ØºÙ‡ Ø§Ù„Ø§ØµÙ„ÙŠÙ‡: \n${title1}\n---\nØªØ§Ø±ÙŠØ® Ø§Ù„ØµØ¯ÙˆØ±: ${released}\nØ¹Ø§Ù…: ${year}\nØ§Ù„Ø¯ÙˆÙ„Ø©: ${countries}\nØ§Ù„Ù„ØºØ©: ${language}\nÙ†Ø¸Ø±Ø© Ø¹Ø§Ù…Ø©: ${overview}\nØ§Ù„ØªÙ‚ÙŠÙŠÙ…: ${rating}`;

                bot.sendPhoto(chatId, imageUrl, { caption });
            } else {
                bot.sendMessage(chatId, 'Ø¹Ø°Ø±Ù‹Ø§ØŒ Ù„Ù… ÙŠØªÙ… Ø§Ù„Ø¹Ø«ÙˆØ± Ø¹Ù„Ù‰ Ù†ØªØ§Ø¦Ø¬.');
            }
        } catch (err) {
            console.error(err);
            bot.sendMessage(chatId, 'Ø­Ø¯Ø« Ø®Ø·Ø£ Ø£Ø«Ù†Ø§Ø¡ Ø¬Ù„Ø¨ Ù…Ø¹Ù„ÙˆÙ…Ø§Øª Ø§Ù„Ù…Ø³Ù„Ø³Ù„.');
        }
    });
};